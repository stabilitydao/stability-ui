export default [
  { inputs: [], name: "AlreadyExist", type: "error" },
  { inputs: [], name: "ETHTransferFailed", type: "error" },
  { inputs: [], name: "IncorrectArrayLength", type: "error" },
  {
    inputs: [
      { internalType: "address[]", name: "assets_", type: "address[]" },
      { internalType: "address[]", name: "expectedAssets_", type: "address[]" },
    ],
    name: "IncorrectAssetsList",
    type: "error",
  },
  { inputs: [], name: "IncorrectBalance", type: "error" },
  { inputs: [], name: "IncorrectInitParams", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "ltv", type: "uint256" }],
    name: "IncorrectLtv",
    type: "error",
  },
  { inputs: [], name: "IncorrectMsgSender", type: "error" },
  { inputs: [], name: "IncorrectZeroArgument", type: "error" },
  { inputs: [], name: "InsufficientBalance", type: "error" },
  { inputs: [], name: "InvalidInitialization", type: "error" },
  { inputs: [], name: "NotExist", type: "error" },
  { inputs: [], name: "NotFactory", type: "error" },
  { inputs: [], name: "NotGovernance", type: "error" },
  { inputs: [], name: "NotGovernanceAndNotMultisig", type: "error" },
  { inputs: [], name: "NotInitializing", type: "error" },
  { inputs: [], name: "NotMultisig", type: "error" },
  { inputs: [], name: "NotOperator", type: "error" },
  { inputs: [], name: "NotPlatform", type: "error" },
  { inputs: [], name: "NotTheOwner", type: "error" },
  { inputs: [], name: "NotVault", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "value", type: "uint256" }],
    name: "TooLowValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "platform",
        type: "address",
      },
      { indexed: false, internalType: "uint256", name: "ts", type: "uint256" },
      {
        indexed: false,
        internalType: "uint256",
        name: "block",
        type: "uint256",
      },
    ],
    name: "ContractInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "metaVault",
        type: "address",
      },
      { indexed: false, internalType: "string", name: "type_", type: "string" },
      {
        indexed: false,
        internalType: "address",
        name: "pegAsset_",
        type: "address",
      },
      { indexed: false, internalType: "string", name: "name_", type: "string" },
      {
        indexed: false,
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "vaults_",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "proportions_",
        type: "uint256[]",
      },
    ],
    name: "NewMetaVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewMetaVaultImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recoveryToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "NewRecoveryToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewRecoveryTokenImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "wrappedMetaVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "metaVault",
        type: "address",
      },
    ],
    name: "NewWrappedMetaVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewWrappedMetaVaultImplementation",
    type: "event",
  },
  {
    inputs: [],
    name: "CONTROLLABLE_VERSION",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createdBlock",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "string", name: "type_", type: "string" },
      { internalType: "address", name: "pegAsset_", type: "address" },
      { internalType: "string", name: "name_", type: "string" },
      { internalType: "string", name: "symbol_", type: "string" },
      { internalType: "address[]", name: "vaults_", type: "address[]" },
      { internalType: "uint256[]", name: "proportions_", type: "uint256[]" },
    ],
    name: "deployMetaVault",
    outputs: [{ internalType: "address", name: "proxy", type: "address" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "address", name: "target", type: "address" },
    ],
    name: "deployRecoveryToken",
    outputs: [{ internalType: "address", name: "proxy", type: "address" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "address", name: "metaVault", type: "address" },
    ],
    name: "deployWrapper",
    outputs: [{ internalType: "address", name: "proxy", type: "address" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "bytes32", name: "initCodeHash", type: "bytes32" },
      { internalType: "address", name: "thisAddress", type: "address" },
    ],
    name: "getCreate2Address",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMetaVaultProxyInitCodeHash",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecoveryTokenProxyInitCodeHash",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getWrappedMetaVaultProxyInitCodeHash",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "platform_", type: "address" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "metaVaultImplementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metaVaults",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platform",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryTokenImplementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
    ],
    name: "setMetaVaultImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
    ],
    name: "setRecoveryTokenImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
    ],
    name: "setWrappedMetaVaultImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "metaProxies", type: "address[]" },
    ],
    name: "upgradeMetaProxies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedMetaVaultImplementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "metaVault", type: "address" }],
    name: "wrapper",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
];
